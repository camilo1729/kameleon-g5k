#==============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 cc=81 tw=80
#==============================================================================
#
# DESCRIPTION: Build a debian wheezy appliance using chroot and qemu-nbd.
#
#==============================================================================

---
# Loads some helpful aliases
aliases: defaults.yaml
# Enables qcow2 checkpoint
#== Global variables use by Kameleon engine and the steps
global:
  ## User varibales : used by the recipe
  user_name: kameleon
  user_password: $$user_name

  # Distribution
  distrib: ubuntu
  release: lucid
  arch: amd64
  kernel_arch: $$arch
  hostname: kameleon-$$distrib

  ## Docker options
  docker_dns: 208.67.222.222
  docker_image: $$kameleon_recipe_name
  docker_hostname: $$kameleon_recipe_name

  # rootfs options
  rootfs: $$kameleon_cwd/rootfs

  ## System variables. Required by kameleon engine
  # Include specific steps
  include_steps:
    - $$distrib/$$release
    - $$distrib
    - debian

  # Apt options
  apt_repository: http://archive.ubuntu.com/ubuntu/
  apt_enable_restricted: true
  # Shell session from where we launch exec_out commands. There is often a
  # local bash session, but it can be a remote shell on other machines or on
  # any shell. (eg. bash, chroot, fakechroot, ssh, tmux, lxc...)
  out_context:
    cmd: bash
    workdir: $$kameleon_cwd
    proxy_cache: 127.0.0.1
  # Shell session that allows us to connect to the building machine in order to
  # configure it and setup additional programs
  ssh_config_file: $$kameleon_cwd/ssh_config
  in_context:
    cmd: LC_ALL=POSIX ssh -F $$ssh_config_file $$kameleon_recipe_name -t /bin/bash
    workdir: /root/kameleon_workdir
    proxy_cache: 172.17.42.1

#== Bootstrap the new system and create the 'in_context'
bootstrap:
  - debootstrap:
    - include_pkg:
        ifupdown locales dhcp3-client netbase
        net-tools iproute acpid openssh-server pciutils syslinux
        linux-image
#apt-utils ca-certificates locales less
    - release: $$release
    - arch: $$arch
    - repository: http://archive.ubuntu.com/ubuntu/
    - variant: minbase
  - prepare_docker
  - start_docker


#== Install and configuration steps
# WARNING: this part should be independante from the out context (whenever
# possible...)
setup:
  # Install
  - configure_apt:
    - repository: $$apt_repository
    - enable_restricted: $$apt_enable_restricted
  - upgrade_system:
    - dist_upgrade: true
  - install_software:
    - packages: >
        bash-completion curl nano vim language-pack-en syslinux sudo linux-image
  # - configure_kernel
  # - install_bootloader_rc # This is for compatiblity with Ubuntu lucid
  # Configuration
  - configure_system:
    - locales: POSIX C en_US fr_FR de_DE
    - lang: en_US.UTF-8
    - timezone: UTC
  - configure_keyboard:
    - layout: "us,fr,de"
#  - configure_network
  - create_group:
    - name: admin
  - create_user:
    - name: $$user_name
    - groups: sudo admin
    - password: $$user_password
#== Export the generated appliance in the format of your choice
export:
  - save_docker_appliance:
    - commit:
      - exec_out: docker commit $(cat MAIN_CONTAINER_ID) $$kameleon_recipe_name:latest
